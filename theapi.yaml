swagger: "2.0"

info:
  description: "本ドキュメントでは一般社団法人ソーシャルアクション機構が運営するサービス「福祉Mover」の API サーバの API 仕様を記述する。"
  version: "1.0.0"
  title: "ソーシャルアクション機構 福祉Mover API Documents"
  termsOfService: "https://socialaction.net/mover/user-3/"
  contact:
    url: "https://socialaction.net/mover/user-3/"
  license:
    name: "一般社団法人ソーシャルアクション機構に帰属"
    url: "https://socialaction.net"

host: "52.199.67.211"

basePath: "/"

tags:
  - name: "bindata-api"
    description: "bindata-api API"
  - name: "nowpos-api"
    description: "nowpos-api API"
  - name:  "possavs-api"
    description: "possavs/data"
schemes:
  - "http"
paths:
  /bindatad/data?日付={日付}&事業所CD={事業所CD}&利用者番号={利用者番号}&送迎区分={送迎区分}:
    get:
      tags:
        - "bindata-api"
      summary: "指定データを取得する。"
      description: "指定データを取得する。"
      produces:
        - "*/*"
      parameters:
        - in: "path"
          name: "日付"
          description: "日付"
          type: "string"
          required: false
        - in: "path"
          name: "事業所CD"
          description: "事業所CD"
          type: "string"
          required: false
        - in: "path"
          name: "利用者番号"
          description: "利用者番号"
          type: "string"
          required: false
        - in: "path"
          name: "送迎区分"
          description: "送迎区分"
          type: "string"
          required: false
      responses:
        "200":
          description: "データ"
          schema:
            type: "array"
            items:
              $ref : "#/definitions/BindatadRequestResponse"
        "204":
          description: "データなし"
        "401":
          description: "認証不可"
      security:
        - tokenAuth: []
    delete:
      tags:
        - "bindata-api"
      summary: "指定データを削除する。"
      description: "指定データを削除する。"
      produces:
        - "*/*"
      parameters:
        - in: "path"
          name: "日付"
          description: "日付"
          type: "string"
          required: true
        - in: "path"
          name: "事業所CD"
          description: "事業所CD"
          type: "string"
          required: true
        - in: "path"
          name: "利用者番号"
          description: "利用者番号"
          type: "string"
          required: true
        - in: "path"
          name: "送迎区分"
          description: "送迎区分"
          type: "string"
          required: true
      responses:
        "201":
          description: "削除成功"
        "204":
          description: "データなし"
        "401":
          description: "認証不可"
      security:
        - tokenAuth: []
  /bindatad/data:
    post:
      tags:
        - "bindata-api"
      summary: "指定データを設定する。"
      description: "指定データを設定する。"
      produces:
        - "application/json"
      parameters:
        - in: "body"
          name: ""
          description: "JSON 形式の body"
          required: true
          schema:
            $ref : "#/definitions/BindatadRequestResponse"
      responses:
        "201":
          description: "データ"
          schema:
            type: "array"
            items:
              $ref : "#/definitions/BindatadRequestResponse"
        "204":
          description: "データなし"
        "401":
          description: "認証不可"
      security:
        - tokenAuth: []
    put:
      tags:
        - "bindata-api"
      summary: "指定データを変更する。"
      description: "指定データを変更する。"
      produces:
        - "application/json"
      parameters:
        - in: "body"
          name: ""
          description: "JSON 形式の body"
          required: true
          schema:
            $ref : "#/definitions/BindatadRequestResponse"
      responses:
        "201":
          description: "データ"
          schema:
            type: "array"
            items:
              $ref : "#/definitions/BindatadRequestResponse"
        "204":
          description: "データなし"
        "401":
          description: "認証不可"
      security:
        - tokenAuth: []

  /nowpos/data/{id}:
    get:
      tags:
        - "nowpos-api"
      summary: "指定データを取得する。"
      description: "指定データを取得する。"
      produces:
        - "*/*"
      parameters:
        - in: "path"
          name: "id"
          description: "id"
          type: "integer"
          required: true
      responses:
        "200":
          description: "データ"
          schema:
            $ref : "#/definitions/NowPosGetResponse"
        "401":
          description: "認証不可"
      security:
        - tokenAuth: []
    delete:
      tags:
        - "nowpos-api"
      summary: "データを削除する。"
      description: "データを削除する。"
      produces:
        - "*/*"
      parameters:
        - in: "path"
          name: "id"
          description: "id"
          type: "integer"
          required: true
      responses:
        "200":
          description: "削除成功"
        "204":
          description: "存在しない id、またはパラメータが渡されていない"
        "401":
          description: "認証不可"
      security:
        - tokenAuth: []

  /nowpos/data/?id={id}&事業所CD={事業所CD}:
    get:
      tags:
        - "nowpos-api"
      summary: "全データ、あるいは指定の範囲のデータを取得する。"
      description: "全データ、あるいは指定の範囲のデータを取得する。"
      produces:
        - "*/*"
      parameters:
        - in: "path"
          name: "id"
          description: "id"
          type: "integer"
          required: false
        - in: "path"
          name: "事業所CD"
          description: "事業所CD"
          type: "integer"
          required: false
      responses:
        "200":
          description: "データ"
          schema:
            type: "object"
            properties:
              cnt:
                type: integer
                description: "件数"
              cars:
                type: "array"
                items:
                  $ref: "#/definitions/NowPosGetResponse2"
        "401":
          description: "認証不可"
      security:
        - tokenAuth: []

  /nowpos/data:
    post:
      tags:
        - "nowpos-api"
      summary: "データを更新・挿入する。"
      description: "データを更新・挿入する。"
      produces:
        - "application/json"
      parameters:
        - in: "body"
          name: ""
          description: "JSON 形式の body"
          required: true
          schema:
            $ref : "#/definitions/NowPosParameter"
      responses:
        "200":
          description: "更新した結果"
          schema:
            type: "object"
            properties:
              id:
                type: "string"
                example: "65"
              事業所CD:
                type: "string"
                example: "0001"
              rest:
                type: "string"
                example: null
              人数:
                type: "integer"
                example: 0
              残人数:
                type: "integer"
                example: null
              userStatus:
                type: "string"
                example: null
              demandId: 
                type: "string"
                example: null
              driver: 
                type: "string"
                example: null
              demand人数: 
                type: "integer"
                example: null
              demand残人数:
                type: "integer"
                example: null
              出発時間: 
                type: "string"
                example: "00:00:00"
              離接者情報:
                type: "integer"
                example: 5
        "401":
          description: "認証不可"
        "404":
          description: "存在しない id"
    put:
      tags:
        - "nowpos-api"
      summary: "データを更新する。"
      description: "データを更新する。"
      produces:
        - "application/json"
      parameters:
        - in: "body"
          name: ""
          description: "JSON 形式の body"
          required: true
          schema:
            $ref: "#/definitions/NowPosParameter"
      responses:
        "200":
          description: "更新した結果"
          schema:
            $ref: "#/definitions/NowPosParameter"
        "204":
          description: "存在しない id、またはパラメータが渡されていない"
        "401":
          description: "認証不可"
      security:
        - tokenAuth: []

  /nowpos/jigyosyo?事業所CD=<{id}>:
    get:
      tags:
        - "nowpos-api"
      summary: "事業所の全データ、あるいは指定のデータを取得する。"
      description: "事業所の全データ、あるいは指定のデータを取得する。"
      produces:
        - "*/*"
      parameters:
        - in: "path"
          name: "id"
          description: "事業所CD"
          type: "integer"
          required: false
      responses:
        "200":
          description: "データ"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/JigyosyoResponse"
        "204":
          description: "存在しない事業所CD、またはデータ無し"
        "401":
          description: "認証不可"
      security:
        - tokenAuth: []

  /nowpos/binninzu_data?id=<{id}>&日付=<日付>&出発時間=<出発時間>:
    get:
      tags:
        - "nowpos-api"
      summary: "便の人数取得と降車されていない人数を取得する。"
      description: "便の人数取得と降車されていない人数を取得する。"
      produces:
        - "*/*"
      parameters:
        - in: "path"
          name: "id"
          description: "carId"
          type: "string"
          required: false
        - in: "path"
          name: "日付"
          description: "8 桁の日付 YYYYMMDD"
          type: "string"
          required: false
        - in: "path"
          name: "出発時間"
          description: "出発時間 HH:SS:00"
          type: "string"
          required: false
      responses:
        "200":
          description: "データ"
          schema:
            type: "object"
            properties:
              CNT:
                type: "string"
                example: "123"
              CZ:
                type: "string"
                example: "123"
              userStatus:
                type: "string"
                example: "休み"
        "204":
          description: "データ無し"
        "401":
          description: "認証不可"
      security:
        - tokenAuth: []

securityDefinitions:
  basicAuth:
    type: "basic"
  tokenAuth:
    name: "Authorization"
    type: "apiKey"
    in: "header"

definitions:
  JigyosyoResponse:
    type: "object"
    properties:
      事業所CD:
        type: "integer"
        example: "9999"
      事業所番号:
        type: "string"
        example: "A9999"
      事業所名:
        type: "string"
        example: "体験"
      フリガナ:
        type: "string"
        example: "タイケン"
      memo:
        type: "string"
        example: null
      lat:
        type: "number"
        example: 36.385245
      lng:
        type: "number"
        example: 139.027786
      service_range:
        type: "integer"
        example: 5
  NowPosGetResponse:
    type: "object"
    properties:
      id:
        type: "integer"
        example: "151"
      事業所CD:
        type: "string"
        example: "0101"
      運転手:
        type: "string"
        example: "宮崎"
      日付:
        type: "string"
        example: "2022/08/04"
      時間:
        type: "string"
        example: "09:52:56"
      Posx:
        type: "string"
        example: "36.432614"
      Posy:
        type: "string"
        example: "139.062936"
      rest:
        type: "string"
        example: "f"
      battery:
        type: "string"
        example: "79"
      status:
        type: "string"
        example: "DECLINED"
  NowPosGetResponse2:
    type: "object"
    properties:
      id:
        type: "integer"
        example: "151"
      事業所CD:
        type: "string"
        example: "0101"
      運転手:
        type: "string"
        example: "宮崎"
      日付:
        type: "string"
        example: "2022/08/04"
      時間:
        type: "string"
        example: "09:52:56"
      location:
        type: "object"
        properties:
          Posx:
            type: "string"
            example: "36.432614"
          Posy:
            type: "string"
            example: "139.062936"
      carstatus:
        type: "array"
        items:
          type: "object"
          properties:
            rest:
              type: "string"
              example: "f"
            battery:
              type: "string"
              example: "79"
            status:
              type: "string"
              example: "DECLINED"
  NowPosParameter:
    type: "object"
    properties:
      日付:
        type: "string"
        example: "2022-08-11"
      id:
        type: "string"
        example: "65"
      時間:
        type: "string"
        example: "18:10:10"
      運転手: 
        type: "string"
        example: "坂本"
      Posx: 
        type: "string"
        example: "36.39245"
      Posy: 
        type: "string"
        example: "139.0442138"
      binkubun: 
        type: "string"
        example: "1"
      deptime: 
        type: "string"
        example: "05:00:00"
      imei: 
        type: "string"
        example: "9594f124e3bbef40 4"
      battery: 
        type: "string"
        example: "4"
      出発時間: 
        type: "string"
        example: "05:00:00"
      事業所CD: 
        type: "string"
        example: "0001" 
  BindatadRequestResponse:
    type: "object"
    properties:
      日付:
        type: "string"
        example: "2022-08-11"
      事業所CD:
        type: "string"
        example: "0101"
      利用者番号:
        type: "string"
        example: "F8167"
      送迎区分:
        type: "string"
        example: "2"
      乗車時刻:
        type: "string"
        example: "12:01:01"
      降車時刻:
        type: "string"
        example: "12:20:59"
      carStatus:
        type: "string"
        example: null
      updatetimec:
        type: "string"
        example: null
      userStatus:
        type: "string"
        example: null
      updatetimeu:
        type: "string"
        example: null

externalDocs:
  description: "Find out more about Swagger"
  url: "http://swagger.io"
